on the other hand, are identified in \(90\%\) of the incidents we investigated in our report. We do not see emphasis on back-ups in the previous report which we identify as an additional control - this might be due to both the increase in ransomware since 2015 and our specific focus on ransomware incidents as an element of our investigation.

The previous study reports that CE technical controls cannot mitigate threats which are due to design decisions (they articulate as hard coded flaws) in the hardware and software. A scrutiny of our findings reveals that attackers take advantage of the enablers which we indicate through _basic gates_. These enablers reflect the manner in which systems are configured, for example, PowerShell permissions. While the fundamentals of protection mechanisms are there [14], developers come with diverse security understandings. Conventional recommendations point towards designing software with security in mind [10]. Future research could explore the extent to which security can be woven into deployment practices, with explicit focus on better observance of the principles.

**Take away.** A comparative understanding with prior work shows that CE controls remain resilient against many attacks. However, our analysis and prior work points to the need for additional controls for improved mitigation. Controls around _human factors_ and _logging & monitoring_ are found by both the studies. While prior work argues for safe design defaults in software & hardware, we make a case for safe software deployment defaults.

## 9 Conclusion

Security is a property of technology with a defined objective. CE controls come with defined objectives of preventing commodity attacks and are meant for a wide range of users. We explore the effectiveness of CE controls using 45 incident reports, which includes 9 incidents of ransomware. IFT allow us the granularity to break incidents into non-reducible events and build upon them to construct the attack pathways across levels and phases. The nuance offered by the method allows us to explore if attacks can be prevented right at their incursion. For example, our level and phase analysis shows that CE alone can completely mitigate 25 out of the 45 incidents at their initial phases, while using a combination of CE and Additional Controls can mitigate another 19 incidents. The additional controls we propose as part of this work are _education, logging & monitoring, policy, encryption & back up_. The insights from our overall study can be summarised as:

* *CE controls by themselves are effective against the majority of commodity attacks, however, they need to be complemented with additional controls for complete mitigation of all the attacks we studied. A combination of both, reduces the attack surface and consequently the blast radius. For example, the combined effectiveness of CE and AC prevent 44 of 45 attacks at their initial phases thus confining the blast radius, if any.
* *Security ought to expand beyond the paradigm of prevention to recovery. This is more attuned to the ever-volving dynamic threat landscape. The need to do so has been recognised earlier as well. For example, _back-up_ is recommended as a complementary good practice in CE guidance to small businesses.
* *We find synergy between our recommendations with those from prior work in this area. Logging & monitoring and human factors are among the common recommendations. Our results show the importance safe software deployment defaults along with safe design defaults.